@model Nop.Plugin.Shipping.Speedy.Models.ConfigurationModel

@inject Nop.Core.IWebHelper webHelper

@{
    Layout = "_ConfigurePlugin";
}

<form asp-controller="Speedy" asp-action="Configure" method="post">

    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="Login" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="Login" asp-required="true" asp-value="@Model.Login" />
                        <span asp-validation-for="Login"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="Password" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="Password" asp-required="true" asp-value="@Model.Password" />
                        <span asp-validation-for="Password"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="DefaultContent" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="DefaultContent" asp-required="true" asp-value="@Model.DefaultContent" />
                        <span asp-validation-for="DefaultContent"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="DefaultPackage" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="DefaultPackage" asp-required="true" asp-value="@Model.DefaultPackage" />
                        <span asp-validation-for="DefaultPackage"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="DefaultWeight" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="DefaultWeight" asp-required="true" asp-value="@Model.DefaultWeight" />
                        <span asp-validation-for="DefaultWeight"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="SenderPhoneNumber" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="SenderPhoneNumber" asp-required="true" asp-value="@Model.SenderPhoneNumber" />
                        <span asp-validation-for="SenderPhoneNumber"></span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <div class="input-group input-group-short">
                            <div class="input-group-text">
                                <button type="submit" name="save" class="btn btn-primary">
                                    @T("Admin.Common.Save")
                                </button>
                            </div>
                            @*@if (Model.IsConfigured)
                                {
                                    <div class="input-group-btn">
                                        <button type="submit" name="verifyCredentials" class="btn btn-info">
                                            @T("Plugins.Tax.Avalara.VerifyCredentials")
                                        </button>
                                    </div>
                                }*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*@if (Model.IsConfigured)
            {
                <script>
                    $(document).ready(function () {
                        $("#@Html.IdFor(model => model.TestAddress.CountryId)").change(function () {
                            var selectedItem = $(this).val();
                            var ddlStates = $("#@Html.IdFor(model => model.TestAddress.StateProvinceId)");
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                                data: {
                                    "countryId": selectedItem
                                },
                                success: function (data, textStatus, jqXHR) {
                                    ddlStates.html('');
                                    $.each(data, function (id, option) {
                                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                    });
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert('Failed to retrieve states.');
                                }
                            });
                        });
                    });
                </script>

            }*@
    </div>

</form>
